


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Adjust, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 IMPORT           getPicAddr
    4 00000000                 IMPORT           putPic
    5 00000000                 IMPORT           getPicWidth
    6 00000000                 IMPORT           getPicHeight
    7 00000000                 EXPORT           start
    8 00000000         
    9 00000000         start
   10 00000000         
   11 00000000 EBFFFFFE        BL               getPicAddr  ; load the start ad
                                                            dress of the image 
                                                            in R4
   12 00000004 E1A04000        MOV              R4, R0
   13 00000008 EBFFFFFE        BL               getPicHeight ; load the height 
                                                            of the image (rows)
                                                             in R5
   14 0000000C E1A05000        MOV              R5, R0
   15 00000010 EBFFFFFE        BL               getPicWidth ; load the width of
                                                             the image (columns
                                                            ) in R6
   16 00000014 E1A06000        MOV              R6, R0
   17 00000018         ;not all functions are used but are made for later use
   18 00000018         
   19 00000018         ; your code goes here
   20 00000018 E3A07000        LDR              R7,=0
   21 0000001C E3A08000        LDR              R8,=0
   22 00000020         
   23 00000020         ;8 byte to preserve alignment        
   24 00000020 E3A00014        LDR              R0, = 20    ;brightness
   25 00000024 E52D0008        STR              R0,     [SP,    #-8]!
   26 00000028 E3A00010        LDR              R0, = 16    ;contrast
   27 0000002C E52D0008        STR              R0,     [SP,    #-8]!
   28 00000030         
   29 00000030         ;R7 = column index      R8 = row index
   30 00000030         iterate
   31 00000030 E1570006        CMP              R7,     R6
   32 00000034 3A000001        BLO              currentrow
   33 00000038         ;increment row index and reset column when equal to widt
                       h
   34 00000038 E2888001        ADD              R8,     R8,     #1
   35 0000003C E3A07000        LDR              R7, =0
   36 00000040         currentrow
   37 00000040 E1580005        CMP              R8,     R5
   38 00000044 2A00000C        BHS              final
   39 00000048         ;end if row index = height as indexes are 0 indexed
   40 00000048 E0090698        MUL              R9,     R8,     R6 ;row length 
                                                            by row index
   41 0000004C E0899007        ADD              R9,     R9,     R7 ;column inde
                                                            x + offset
   42 00000050 E794A109        LDR              R10,     [R4,    R9,     LSL #2
] 
                                                            ;gets pixel at addr
                                                            ess
   43 00000054         
   44 00000054 E1A0000A        MOV              R0,     R10 ;copy of pixel
   45 00000058 E59D1000        LDR              R1,     [SP] ;contrast
   46 0000005C EB000025        BL               changePixelContrast
   47 00000060 E1A0A000        MOV              R10,     R0 ;replace old pixel



ARM Macro Assembler    Page 2 


   48 00000064         
   49 00000064 E59D1008        LDR              R1,     [SP,    #8] ;brightness
                                                            
   50 00000068 EB000006        BL               changePixelBrightness
   51 0000006C E1A0A000        MOV              R10,     R0 ;replace old pixel
   52 00000070         
   53 00000070 E784A109        STR              R10,     [R4,    R9,     LSL #2
] 
                                                            ;puts in new addres
                                                            s
   54 00000074 E2877001        ADD              R7,     R7,     #1 ;increment c
                                                            olumn index
   55 00000078 EAFFFFEC        b                iterate
   56 0000007C         final
   57 0000007C E28DD010        ADD              SP,     SP,     #16
   58 00000080 EBFFFFFE        BL               putPic      ; re-display the up
                                                            dated image
   59 00000084         
   60 00000084 EAFFFFFE 
                       stop    B                stop
   61 00000088         
   62 00000088         changePixelBrightness
   63 00000088         ;changes the brightness of entire pixel by value
   64 00000088         ;R0 = pixel     R1=brightness
   65 00000088 E52DE008        STR              LR,     [SP,    #-8]!
   66 0000008C E52D5008        STR              R5,     [SP,    #-8]!
   67 00000090 E52D4008        STR              R4,     [SP,    #-8]!
   68 00000094         
   69 00000094 E1A04000        MOV              R4,     R0  ;copy of pixel
   70 00000098 E1A05001        MOV              R5,     R1  ;brightness
   71 0000009C         
   72 0000009C EB000031        BL               getPicRed
   73 000000A0 E1A01005        MOV              R1,     R5  ;R1 could be corrup
                                                            ted
   74 000000A4 EB00003C        BL               changeBrightness
   75 000000A8 E1A01000        MOV              R1,     R0  ;R1 = new red
   76 000000AC E1A00004        MOV              R0,     R4  ;old pixel
   77 000000B0 EB00004F        BL               swapRed
   78 000000B4 E1A04000        MOV              R4,     R0  ;replace pixel with
                                                             new one
   79 000000B8         
   80 000000B8 EB00002C        BL               getPicGreen
   81 000000BC E1A01005        MOV              R1,     R5  ;R1 could be corrup
                                                            ted
   82 000000C0 EB000035        BL               changeBrightness
   83 000000C4 E1A01000        MOV              R1,     R0  ;R1 = new green
   84 000000C8 E1A00004        MOV              R0,     R4  ;old pixel
   85 000000CC EB000051        BL               swapGreen
   86 000000D0 E1A04000        MOV              R4,     R0  ;replace pixel with
                                                             new one
   87 000000D4         
   88 000000D4 EB000028        BL               getPicBlue
   89 000000D8 E1A01005        MOV              R1,     R5  ;R1 could be corrup
                                                            ted
   90 000000DC EB00002E        BL               changeBrightness
   91 000000E0 E1A01000        MOV              R1,     R0  ;R1 = new blue
   92 000000E4 E1A00004        MOV              R0,     R4  ;old pixel
   93 000000E8 EB000053        BL               swapBlue
   94 000000EC         



ARM Macro Assembler    Page 3 


   95 000000EC E49D4008        LDR              R4,     [SP],    #8
   96 000000F0 E49D5008        LDR              R5,     [SP],    #8
   97 000000F4 E49DF008        LDR              PC,     [SP],    #8
   98 000000F8         
   99 000000F8         
  100 000000F8         changePixelContrast
  101 000000F8         ;changes the contrast of entire pixel by value
  102 000000F8         ;R0 = pixel     R1=contrast
  103 000000F8         ;returns R0=new pixel
  104 000000F8         ;note this can be done much faster but this splits up th
                       e changes to each channel
  105 000000F8 E52DE008        STR              LR,     [SP,    #-8]!
  106 000000FC E52D5008        STR              R5,     [SP,    #-8]!
  107 00000100 E52D4008        STR              R4,     [SP,    #-8]!
  108 00000104         
  109 00000104 E1A04000        MOV              R4,     R0  ;copy of pixel
  110 00000108 E1A05001        MOV              R5,     R1  ;contrast value
  111 0000010C         
  112 0000010C EB000015        BL               getPicRed
  113 00000110 E1A01005        MOV              R1,     R5  ;R1 could be corrup
                                                            ted
  114 00000114 EB00002C        BL               changeContrast
  115 00000118 E1A01000        MOV              R1,     R0  ;R1 = new red
  116 0000011C E1A00004        MOV              R0,     R4  ;old pixel
  117 00000120 EB000033        BL               swapRed
  118 00000124 E1A04000        MOV              R4,     R0  ;replace pixel with
                                                             new one
  119 00000128         
  120 00000128 EB000010        BL               getPicGreen
  121 0000012C E1A01005        MOV              R1,     R5  ;R1 could be corrup
                                                            ted
  122 00000130 EB000025        BL               changeContrast
  123 00000134 E1A01000        MOV              R1,     R0  ;R1 = new green
  124 00000138 E1A00004        MOV              R0,     R4  ;old pixel
  125 0000013C EB000035        BL               swapGreen
  126 00000140 E1A04000        MOV              R4,     R0  ;replace pixel with
                                                             new one
  127 00000144         
  128 00000144 EB00000C        BL               getPicBlue
  129 00000148 E1A01005        MOV              R1,     R5  ;R1 could be corrup
                                                            ted
  130 0000014C EB00001E        BL               changeContrast
  131 00000150 E1A01000        MOV              R1,     R0  ;R1 = new blue
  132 00000154 E1A00004        MOV              R0,     R4  ;old pixel
  133 00000158 EB000037        BL               swapBlue
  134 0000015C         
  135 0000015C E49D4008        LDR              R4,     [SP],    #8
  136 00000160 E49D5008        LDR              R5,     [SP],    #8
  137 00000164 E49DF008        LDR              PC,     [SP],    #8
  138 00000168         
  139 00000168         getPicRed
  140 00000168         ;gets the red component of a pixel as a number between 0
                       -255
  141 00000168         ;parameter R0 = pixel
  142 00000168         ;returns R0 as red component
  143 00000168 E1A00820        MOV              R0,     R0,      LSR     #16
  144 0000016C E12FFF1E        BX               LR
  145 00000170         
  146 00000170         getPicGreen



ARM Macro Assembler    Page 4 


  147 00000170         ;gets the green component of a pixel as a number between
                        0-255
  148 00000170         ;parameter R0 = pixel
  149 00000170         ;returns R0 as green component
  150 00000170 E1A00420        MOV              R0,     R0,      LSR     #8
  151 00000174 E20000FF        AND              R0,     R0,     #0x000000FF
  152 00000178 E12FFF1E        BX               LR
  153 0000017C         
  154 0000017C         getPicBlue
  155 0000017C         ;gets the blue component of a pixel as a number between 
                       0-255
  156 0000017C         ;parameter R0 = pixel
  157 0000017C         ;returns R0 as blue component
  158 0000017C E20000FF        AND              R0,     R0,     #0x000000FF
  159 00000180 E12FFF1E        BX               LR
  160 00000184         
  161 00000184         compositeColors
  162 00000184         ;combines the red green and blue components into a singl
                       e colour
  163 00000184         ;parameters R0=red R1=green R2=blue
  164 00000184         ;returns R0 as colour
  165 00000184 E1A00800        MOV              R0,     R0,     LSL     #16 
                                                            ;red in last pos
  166 00000188 E1A01401        MOV              R1,     R1,     LSL     #8 
                                                            ;green in second
  167 0000018C E0800001        ADD              R0,     R0,     R1 ;combine red
                                                             and green
  168 00000190 E0800002        ADD              R0,     R0,     R2 
                                                            ;combine with blue
  169 00000194 E3C004FF        AND              R0,     R0,     #0x00FFFFFF
  170 00000198 E12FFF1E        BX               LR
  171 0000019C         
  172 0000019C         changeBrightness
  173 0000019C         ;changes the brightness of a specific color component of
                        a pixel
  174 0000019C         ;parameters R0=color component R1=brightness
  175 0000019C         ;returns R0 as brightened component
  176 0000019C         
  177 0000019C E0900001        ADDS             R0,     R0,     R1 ;add brightn
                                                            ess to component
  178 000001A0 5A000001        BPL              notzero
  179 000001A4 E3A00000        LDR              R0,=0
  180 000001A8 EA000002        b                normal
  181 000001AC         notzero
  182 000001AC E35000FF        CMP              R0,     #0x000000FF
  183 000001B0 3A000000        BLO              normal      ;to set to max if g
                                                            reater than 255
  184 000001B4 E3A000FF        LDR              R0,=0x000000FF
  185 000001B8         normal
  186 000001B8 E3500000        CMP              R0,     #0
  187 000001BC 2A000000        BHS              finishedBrightness
  188 000001C0 E3A00000        LDR              R0, = 0     ;to set to min if l
                                                            ess than 0
  189 000001C4         finishedBrightness
  190 000001C4 E20000FF        AND              R0,     R0,     #0x000000FF ;cl
                                                            ears any overflow
  191 000001C8 E12FFF1E        BX               LR
  192 000001CC         
  193 000001CC         changeContrast



ARM Macro Assembler    Page 5 


  194 000001CC         ;changes the contrast of a specific color component of a
                        pixel
  195 000001CC         ;parameters R0=color component R1=contrast
  196 000001CC         ;returns R0 as saturated component
  197 000001CC E3500000        CMP              R0,     #0
  198 000001D0 9A000005        BLS              notmax      ;if 0 skip all this
                                                            
  199 000001D4 E0100091        MULS             R0,     R1,     R0 ;multiply by
                                                             contrast
  200 000001D8 6A000002        BVS              ismax       ;if overflow than s
                                                            et to max
  201 000001DC E1A00220        MOV              R0,     R0,     LSR     #4 
                                                            ;divides by 16
  202 000001E0 E35000FF        CMP              R0,     #0x000000FF
  203 000001E4 3A000000        BLO              notmax      ;to set to max if g
                                                            reater than 255
  204 000001E8         ismax
  205 000001E8 E3A000FF        LDR              R0,=0x000000FF
  206 000001EC         notmax
  207 000001EC E20000FF        AND              R0,     R0,     #0x000000FF ;cl
                                                            ears any overflow
  208 000001F0 E12FFF1E        BX               LR
  209 000001F4         
  210 000001F4         swapRed
  211 000001F4         ;swaps the red component of a pixel with a specified val
                       ue
  212 000001F4         ;parameters     R0=color        R1=red component
  213 000001F4         ;returns R0 as new pixel
  214 000001F4 E35100FF        CMP              R1,     #0x000000FF
  215 000001F8 3A000000        BLO              notmaxred   ;to set to max if g
                                                            reater than 255
  216 000001FC E3A010FF        LDR              R1,=0x000000FF 
                                                            ;else color is max
  217 00000200         notmaxred
  218 00000200 E20110FF        AND              R1,     R1,     #0x000000FF ;pr
                                                            events component ov
                                                            er 255
  219 00000204 E1A01801        MOV              R1,     R1,     LSL     #16 
                                                            ;red in last pos
  220 00000208 E59F204C        LDR              R2,=0x0000FFFF
  221 0000020C E0000002        AND              R0,     R0,     R2 ;scrambles r
                                                            ed of color
  222 00000210 E1810000        ORR              R0,     R1,     R0 ;final color
                                                            
  223 00000214 E12FFF1E        BX               LR
  224 00000218         
  225 00000218         swapGreen
  226 00000218         ;swaps the green component of a pixel with a specified v
                       alue
  227 00000218         ;parameters     R0=color        R1=green component
  228 00000218         ;returns R0 as new pixel
  229 00000218 E35100FF        CMP              R1,     #0x000000FF
  230 0000021C 3A000000        BLO              notmaxgreen ;to set to max if g
                                                            reater than 255
  231 00000220 E3A010FF        LDR              R1,=0x000000FF 
                                                            ;else color is max
  232 00000224         notmaxgreen
  233 00000224 E20110FF        AND              R1,     R1,     #0x000000FF ;pr
                                                            events component ov



ARM Macro Assembler    Page 6 


                                                            er 255
  234 00000228 E1A01401        MOV              R1,     R1,     LSL     #8 ;gre
                                                            en in second pos
  235 0000022C E59F202C        LDR              R2,=0x00FF00FF
  236 00000230 E0000002        AND              R0,     R0,     R2 ;scrambles g
                                                            reen of color
  237 00000234 E1810000        ORR              R0,     R1,     R0 ;final color
                                                            
  238 00000238 E12FFF1E        BX               LR
  239 0000023C         
  240 0000023C         swapBlue
  241 0000023C         ;swaps the blue component of a pixel with a specified va
                       lue
  242 0000023C         ;parameters     R0=color        R1=blue component
  243 0000023C         ;returns R0 as new pixel
  244 0000023C E35100FF        CMP              R1,     #0x000000FF
  245 00000240 3A000000        BLO              notmaxblue  ;to set to max if g
                                                            reater than 255
  246 00000244 E3A010FF        LDR              R1,=0x000000FF 
                                                            ;else color is max
  247 00000248         notmaxblue
  248 00000248 E20110FF        AND              R1,     R1,     #0x000000FF ;pr
                                                            events component ov
                                                            er 255
  249 0000024C E59F2010        LDR              R2,=0x00FFFF00
  250 00000250 E0000002        AND              R0,     R0,     R2 ;scrambles b
                                                            lue of color
  251 00000254 E1810000        ORR              R0,     R1,     R0 ;final color
                                                            
  252 00000258 E12FFF1E        BX               LR
  253 0000025C         
  254 0000025C         
  255 0000025C                 END
              0000FFFF 
              00FF00FF 
              00FFFF00 
Command Line: --debug --xref --apcs=interwork --depend=.\adjust.d -o.\adjust.o 
-IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips --
predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_CLOCK
_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1
" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\adjust.lst 
Adjust.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Adjust 00000000

Symbol: Adjust
   Definitions
      At line 1 in file Adjust.s
   Uses
      None
Comment: Adjust unused
changeBrightness 0000019C

Symbol: changeBrightness
   Definitions
      At line 172 in file Adjust.s
   Uses
      At line 74 in file Adjust.s
      At line 82 in file Adjust.s
      At line 90 in file Adjust.s

changeContrast 000001CC

Symbol: changeContrast
   Definitions
      At line 193 in file Adjust.s
   Uses
      At line 114 in file Adjust.s
      At line 122 in file Adjust.s
      At line 130 in file Adjust.s

changePixelBrightness 00000088

Symbol: changePixelBrightness
   Definitions
      At line 62 in file Adjust.s
   Uses
      At line 50 in file Adjust.s
Comment: changePixelBrightness used once
changePixelContrast 000000F8

Symbol: changePixelContrast
   Definitions
      At line 100 in file Adjust.s
   Uses
      At line 46 in file Adjust.s
Comment: changePixelContrast used once
compositeColors 00000184

Symbol: compositeColors
   Definitions
      At line 161 in file Adjust.s
   Uses
      None
Comment: compositeColors unused
currentrow 00000040

Symbol: currentrow
   Definitions
      At line 36 in file Adjust.s
   Uses
      At line 32 in file Adjust.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: currentrow used once
final 0000007C

Symbol: final
   Definitions
      At line 56 in file Adjust.s
   Uses
      At line 38 in file Adjust.s
Comment: final used once
finishedBrightness 000001C4

Symbol: finishedBrightness
   Definitions
      At line 189 in file Adjust.s
   Uses
      At line 187 in file Adjust.s
Comment: finishedBrightness used once
getPicBlue 0000017C

Symbol: getPicBlue
   Definitions
      At line 154 in file Adjust.s
   Uses
      At line 88 in file Adjust.s
      At line 128 in file Adjust.s

getPicGreen 00000170

Symbol: getPicGreen
   Definitions
      At line 146 in file Adjust.s
   Uses
      At line 80 in file Adjust.s
      At line 120 in file Adjust.s

getPicRed 00000168

Symbol: getPicRed
   Definitions
      At line 139 in file Adjust.s
   Uses
      At line 72 in file Adjust.s
      At line 112 in file Adjust.s

ismax 000001E8

Symbol: ismax
   Definitions
      At line 204 in file Adjust.s
   Uses
      At line 200 in file Adjust.s
Comment: ismax used once
iterate 00000030

Symbol: iterate
   Definitions
      At line 30 in file Adjust.s
   Uses
      At line 55 in file Adjust.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: iterate used once
normal 000001B8

Symbol: normal
   Definitions
      At line 185 in file Adjust.s
   Uses
      At line 180 in file Adjust.s
      At line 183 in file Adjust.s

notmax 000001EC

Symbol: notmax
   Definitions
      At line 206 in file Adjust.s
   Uses
      At line 198 in file Adjust.s
      At line 203 in file Adjust.s

notmaxblue 00000248

Symbol: notmaxblue
   Definitions
      At line 247 in file Adjust.s
   Uses
      At line 245 in file Adjust.s
Comment: notmaxblue used once
notmaxgreen 00000224

Symbol: notmaxgreen
   Definitions
      At line 232 in file Adjust.s
   Uses
      At line 230 in file Adjust.s
Comment: notmaxgreen used once
notmaxred 00000200

Symbol: notmaxred
   Definitions
      At line 217 in file Adjust.s
   Uses
      At line 215 in file Adjust.s
Comment: notmaxred used once
notzero 000001AC

Symbol: notzero
   Definitions
      At line 181 in file Adjust.s
   Uses
      At line 178 in file Adjust.s
Comment: notzero used once
start 00000000

Symbol: start
   Definitions
      At line 9 in file Adjust.s
   Uses
      At line 7 in file Adjust.s
Comment: start used once



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

stop 00000084

Symbol: stop
   Definitions
      At line 60 in file Adjust.s
   Uses
      At line 60 in file Adjust.s
Comment: stop used once
swapBlue 0000023C

Symbol: swapBlue
   Definitions
      At line 240 in file Adjust.s
   Uses
      At line 93 in file Adjust.s
      At line 133 in file Adjust.s

swapGreen 00000218

Symbol: swapGreen
   Definitions
      At line 225 in file Adjust.s
   Uses
      At line 85 in file Adjust.s
      At line 125 in file Adjust.s

swapRed 000001F4

Symbol: swapRed
   Definitions
      At line 210 in file Adjust.s
   Uses
      At line 77 in file Adjust.s
      At line 117 in file Adjust.s

25 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

getPicAddr 00000000

Symbol: getPicAddr
   Definitions
      At line 3 in file Adjust.s
   Uses
      At line 11 in file Adjust.s
Comment: getPicAddr used once
getPicHeight 00000000

Symbol: getPicHeight
   Definitions
      At line 6 in file Adjust.s
   Uses
      At line 13 in file Adjust.s
Comment: getPicHeight used once
getPicWidth 00000000

Symbol: getPicWidth
   Definitions
      At line 5 in file Adjust.s
   Uses
      At line 15 in file Adjust.s
Comment: getPicWidth used once
main 00000000

Symbol: main
   Definitions
      At line 2 in file Adjust.s
   Uses
      None
Comment: main unused
putPic 00000000

Symbol: putPic
   Definitions
      At line 4 in file Adjust.s
   Uses
      At line 58 in file Adjust.s
Comment: putPic used once
5 symbols
369 symbols in table
