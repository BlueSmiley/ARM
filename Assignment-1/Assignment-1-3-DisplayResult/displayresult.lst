


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             DisplayResult, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 IMPORT           getkey
    4 00000000                 IMPORT           sendchar
    5 00000000                 EXPORT           start
    6 00000000                 PRESERVE8
    7 00000000         
    8 00000000         start
    9 00000000 E3A0500A        LDR              R5, = 10
   10 00000004 E3A07000        LDR              R7, = 0
   11 00000008 E3A08000        LDR              R8, = 0
   12 0000000C E3A0C000        LDR              R12, = 0    ;initialises regist
                                                            ers
   13 00000010         newInstruction
   14 00000010 E3A04000        LDR              R4, = 0     ;resets R4 to zero
   15 00000014         read
   16 00000014         
   17 00000014 EBFFFFFE        BL               getkey      ; read key from con
                                                            sole
   18 00000018 E350000D        CMP              R0, #0x0D   ; while (key != CR)
                                                            
   19 0000001C 0A000004        BEQ              endRead     ;{
   20 00000020 EBFFFFFE        BL               sendchar    ;   echo key back t
                                                            o console
   21 00000024 E0040495        MUL              R4,     R5,     R4 ;
   22 00000028 E2406030        SUB              R6,     R0,     #'0' ;converts 
                                                            ascii value to deci
                                                            mal unsigned
   23 0000002C E0844006        ADD              R4,     R4,     R6 ;adds user i
                                                            nput to total
   24 00000030         
   25 00000030 EAFFFFF7        B                read        ; }
   26 00000034         
   27 00000034         endRead
   28 00000034 E3A0B000        LDR              R11, = 0    ;resets R11 to stor
                                                            e new mean
   29 00000038 E2877001        ADD              R7,     R7,     #1 ;Count
   30 0000003C E0888004        ADD              R8,     R8,     R4 ;sum
   31 00000040 E1A06008        MOV              R6,     R8  ;re-intialise R6 as
                                                             current sum
   32 00000044         
   33 00000044 E1580004        CMP              R8,     R4  ;if first iteration
                                                             of loop
   34 00000048 1A000002        BNE              maxCheck
   35 0000004C E1A09004        MOV              R9,     R4  ;max value = R4
   36 00000050 E1A0A004        MOV              R10,    R4  ;min value = R4
   37 00000054 EA000008        b                firstDivision
   38 00000058         
   39 00000058         maxCheck
   40 00000058 E1540009        CMP              R4,     R9  ;if(R4>R9){
   41 0000005C 9A000000        BLS              minCheck    ;R9 = R4
   42 00000060 E1A09004        MOV              R9,     R4  ;}
   43 00000064         
   44 00000064         minCheck
   45 00000064 E154000A        CMP              R4,    R10  ;if(R4<R10){ 
   46 00000068 2A000003        BHS              firstDivision ;R10 = R4
   47 0000006C E1A0A004        MOV              R10,    R4  ;}
   48 00000070         
   49 00000070 EA000001        b                firstDivision



ARM Macro Assembler    Page 2 


   50 00000074         
   51 00000074         while
   52 00000074 0A000005        BEQ              noRemainder
   53 00000078 3A000002        BLO              remainder
   54 0000007C         firstDivision
   55 0000007C E28BB001        ADD              R11,    R11,    #1 
                                                            ;R11 = quotient
   56 00000080 E0566007        SUBS             R6,     R6,     R7 ;Divides cur
                                                            rent sum by count
   57 00000084 EAFFFFFA        b                while
   58 00000088         
   59 00000088         remainder                            ;if(R6 % R7 != 0){
   60 00000088 E24BB001        SUB              R11,    R11,    #1
   61 0000008C E0866007        ADD              R6,     R6,     R7 
                                                            ;R6 = remainder }
   62 00000090         noRemainder
   63 00000090         
   64 00000090 E3A06001        LDR              R6, = 1     ;resets R6
   65 00000094         exponential
   66 00000094 E0000596        MUL              R0,     R6,     R5
   67 00000098 E15B0000        CMP              R11,    R0  ;checks if R6 has s
                                                            ame number of decim
                                                            al places as mean
   68 0000009C 3A000001        BLO              declaration
   69 000000A0 E0060695        MUL              R6,     R5,     R6 ;else increa
                                                            se R6 by one decima
                                                            l place
   70 000000A4 EAFFFFFA        b                exponential
   71 000000A8         
   72 000000A8         declaration
   73 000000A8 E3A00000        LDR              R0, = 0     ;resets R0
   74 000000AC E1A0400B        MOV              R4,     R11 ;R4 temporarily sto
                                                            res mean
   75 000000B0         
   76 000000B0         secondDivision
   77 000000B0 E0544006        SUBS             R4,     R4,     R6
   78 000000B4 3A000001        BLO              endDivision
   79 000000B8 E2800001        ADD              R0,     R0,     #1 
                                                            ;R0 is quotient
   80 000000BC EAFFFFFB        b                secondDivision ;Divides R4 by R
                                                            6 and ignores remai
                                                            nder
   81 000000C0         
   82 000000C0         endDivision
   83 000000C0 E0040690        MUL              R4,     R0,     R6
   84 000000C4 E04BB004        SUB              R11,    R11,    R4
   85 000000C8 E2800030        ADD              R0,     R0,     #'0'
   86 000000CC EBFFFFFE        BL               sendchar
   87 000000D0 E3560001        CMP              R6,    #1   ;ends program when 
                                                            last decimal place 
                                                            has been displayed
   88 000000D4 0AFFFFCD        BEQ              newInstruction
   89 000000D8         
   90 000000D8 E1A00006        MOV              R0,     R6
   91 000000DC E3A06000        LDR              R6, = 0
   92 000000E0         reducingPower
   93 000000E0 E2866001        ADD              R6,     R6,     #1
   94 000000E4 E0400005        SUB              R0,     R0,     R5
   95 000000E8 E3500000        CMP              R0,     #0



ARM Macro Assembler    Page 3 


   96 000000EC 0AFFFFED        BEQ              declaration
   97 000000F0 EAFFFFFA        b                reducingPower ;Decreses R6 by o
                                                            ne power
   98 000000F4         
   99 000000F4         
  100 000000F4 EAFFFFFE 
                       stop    B                stop
  101 000000F8         
  102 000000F8                 END
Command Line: --debug --xref --apcs=interwork --depend=.\displayresult.d -o.\di
splayresult.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --prede
fine="NO_CLOCK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM
_INTVEC SETA 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list
=.\displayresult.lst DisplayResult.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DisplayResult 00000000

Symbol: DisplayResult
   Definitions
      At line 1 in file DisplayResult.s
   Uses
      None
Comment: DisplayResult unused
declaration 000000A8

Symbol: declaration
   Definitions
      At line 72 in file DisplayResult.s
   Uses
      At line 68 in file DisplayResult.s
      At line 96 in file DisplayResult.s

endDivision 000000C0

Symbol: endDivision
   Definitions
      At line 82 in file DisplayResult.s
   Uses
      At line 78 in file DisplayResult.s
Comment: endDivision used once
endRead 00000034

Symbol: endRead
   Definitions
      At line 27 in file DisplayResult.s
   Uses
      At line 19 in file DisplayResult.s
Comment: endRead used once
exponential 00000094

Symbol: exponential
   Definitions
      At line 65 in file DisplayResult.s
   Uses
      At line 70 in file DisplayResult.s
Comment: exponential used once
firstDivision 0000007C

Symbol: firstDivision
   Definitions
      At line 54 in file DisplayResult.s
   Uses
      At line 37 in file DisplayResult.s
      At line 46 in file DisplayResult.s
      At line 49 in file DisplayResult.s

maxCheck 00000058

Symbol: maxCheck
   Definitions
      At line 39 in file DisplayResult.s
   Uses
      At line 34 in file DisplayResult.s
Comment: maxCheck used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

minCheck 00000064

Symbol: minCheck
   Definitions
      At line 44 in file DisplayResult.s
   Uses
      At line 41 in file DisplayResult.s
Comment: minCheck used once
newInstruction 00000010

Symbol: newInstruction
   Definitions
      At line 13 in file DisplayResult.s
   Uses
      At line 88 in file DisplayResult.s
Comment: newInstruction used once
noRemainder 00000090

Symbol: noRemainder
   Definitions
      At line 62 in file DisplayResult.s
   Uses
      At line 52 in file DisplayResult.s
Comment: noRemainder used once
read 00000014

Symbol: read
   Definitions
      At line 15 in file DisplayResult.s
   Uses
      At line 25 in file DisplayResult.s
Comment: read used once
reducingPower 000000E0

Symbol: reducingPower
   Definitions
      At line 92 in file DisplayResult.s
   Uses
      At line 97 in file DisplayResult.s
Comment: reducingPower used once
remainder 00000088

Symbol: remainder
   Definitions
      At line 59 in file DisplayResult.s
   Uses
      At line 53 in file DisplayResult.s
Comment: remainder used once
secondDivision 000000B0

Symbol: secondDivision
   Definitions
      At line 76 in file DisplayResult.s
   Uses
      At line 80 in file DisplayResult.s
Comment: secondDivision used once
start 00000000

Symbol: start



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 8 in file DisplayResult.s
   Uses
      At line 5 in file DisplayResult.s
Comment: start used once
stop 000000F4

Symbol: stop
   Definitions
      At line 100 in file DisplayResult.s
   Uses
      At line 100 in file DisplayResult.s
Comment: stop used once
while 00000074

Symbol: while
   Definitions
      At line 51 in file DisplayResult.s
   Uses
      At line 57 in file DisplayResult.s
Comment: while used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

getkey 00000000

Symbol: getkey
   Definitions
      At line 3 in file DisplayResult.s
   Uses
      At line 17 in file DisplayResult.s
Comment: getkey used once
main 00000000

Symbol: main
   Definitions
      At line 2 in file DisplayResult.s
   Uses
      None
Comment: main unused
sendchar 00000000

Symbol: sendchar
   Definitions
      At line 4 in file DisplayResult.s
   Uses
      At line 20 in file DisplayResult.s
      At line 86 in file DisplayResult.s

3 symbols
357 symbols in table
