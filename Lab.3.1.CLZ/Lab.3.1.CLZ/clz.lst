


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             CLZ, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000         
    7 00000000 E3A04191        LDR              r4, =0x40000024 ; install the s
                                                            tart address of you
                                                            r exception handler
                                                            
    8 00000004 E59F5070        LDR              r5, =UndefHandler ; in the exce
                                                            ption vector lookup
                                                             table
    9 00000008 E5845000        STR              r5, [r4]
   10 0000000C         
   11 0000000C         
   12 0000000C         ; write a program to test your exception handler
   13 0000000C E3A0420F        LDR              r4, =0xF0000000 ; test 3^4
   14 00000010         ; This is our undefinied unstruction opcode
   15 00000010 77F150F4        DCD              0x77F150F4
   16 00000014         
   17 00000014         
   18 00000014 EAFFFFFE 
                       stop    B                stop
   19 00000018         
   20 00000018         UndefHandler
   21 00000018 E92D5FFF        STMFD            sp!, {r0-r12, LR} 
                                                            ; save registers
   22 0000001C         
   23 0000001C E51E4004        LDR              r4, [lr, #-4] ; load undefinied
                                                             instruction
   24 00000020 E204580F        BIC              r5, r4, #0xFFF0FFFF ; clear all
                                                             but opcode bits
   25 00000024 E3350801        TEQ              r5, #0x00010000 ; check for und
                                                            efined opcode 0x1
   26 00000028 1A000009        BNE              endif1      ; if (power instruc
                                                            tion) {
   27 0000002C         
   28 0000002C E204520F        BIC              R5,     R4,     #0x0FFFFFFF ;ge
                                                            t conditional code
   29 00000030 E3550207        CMP              R5,     #0x70000000 ;check for 
                                                            V(0111) set, 
   30 00000034         ;change 7 to check for other flags
   31 00000034 1A000000        BNE              noVcheck
   32 00000038 7A000005        BVC              endif1      ;if V flag isnt set
                                                             end
   33 0000003C         noVcheck
   34 0000003C E204500F        BIC              r5, r4, #0xFFFFFFF0 ;  isolate 
                                                            Rm register number 
                                                            ;
   35 00000040 E2047C0F        BIC              r7, r4, #0xFFFFF0FF ;  isolate 
                                                            Rd register number
   36 00000044 E1A07427        MOV              r7, r7, LSR #8 ;
   37 00000048         
   38 00000048 E79D1105        LDR              r1, [sp, r5, LSL #2] ;  grab sa
                                                            ved Rm off stack
   39 0000004C         
   40 0000004C EB000001        BL               CountLeadingZeros
   41 00000050         



ARM Macro Assembler    Page 2 


   42 00000050 E78D0107        STR              r0, [sp, r7, LSL #2] ;  save re
                                                            sult over saved Rd 
                                                             
   43 00000054         endif1                               ; }
   44 00000054 E8FD9FFF        LDMFD            sp!, {r0-r12, PC}^ ; restore re
                                                            gister and CPSR
   45 00000058         
   46 00000058         
   47 00000058         ;CLZ subroutine
   48 00000058         ; Counts the number of leading zeros
   49 00000058         ; paramaters: r0: result (variable)
   50 00000058         ;             r1: x (value)
   51 00000058         CountLeadingZeros
   52 00000058 E92D4000        STMFD            sp!, {lr}   ; save registers
   53 0000005C E3A00000        LDR              R0,=0       ;count
   54 00000060         while
   55 00000060 E1B01081        MOVS             R1,     R1,     LSL     #1
   56 00000064 2A000003        BCS              finishCount
   57 00000068 E2800001        ADD              R0,     R0,     #1
   58 0000006C E3500020        CMP              R0,     #32
   59 00000070 2A000000        BHS              finishCount
   60 00000074 EAFFFFF9        b                while
   61 00000078         finishCount
   62 00000078 E8BD8000        LDMFD            sp!, {pc}   ; restore registers
                                                             and return
   63 0000007C         
   64 0000007C         
   65 0000007C         
   66 0000007C                 END
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\clz.d -o.\clz.o -IC:\K
eil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips --predef
ine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_CLOCK_SETUP
 SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1" --pr
edefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\clz.lst CLZ.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CLZ 00000000

Symbol: CLZ
   Definitions
      At line 1 in file CLZ.s
   Uses
      None
Comment: CLZ unused
CountLeadingZeros 00000058

Symbol: CountLeadingZeros
   Definitions
      At line 51 in file CLZ.s
   Uses
      At line 40 in file CLZ.s
Comment: CountLeadingZeros used once
UndefHandler 00000018

Symbol: UndefHandler
   Definitions
      At line 20 in file CLZ.s
   Uses
      At line 8 in file CLZ.s
Comment: UndefHandler used once
endif1 00000054

Symbol: endif1
   Definitions
      At line 43 in file CLZ.s
   Uses
      At line 26 in file CLZ.s
      At line 32 in file CLZ.s

finishCount 00000078

Symbol: finishCount
   Definitions
      At line 61 in file CLZ.s
   Uses
      At line 56 in file CLZ.s
      At line 59 in file CLZ.s

noVcheck 0000003C

Symbol: noVcheck
   Definitions
      At line 33 in file CLZ.s
   Uses
      At line 31 in file CLZ.s
Comment: noVcheck used once
start 00000000

Symbol: start
   Definitions
      At line 5 in file CLZ.s
   Uses
      At line 3 in file CLZ.s
Comment: start used once
stop 00000014



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: stop
   Definitions
      At line 18 in file CLZ.s
   Uses
      At line 18 in file CLZ.s
Comment: stop used once
while 00000060

Symbol: while
   Definitions
      At line 54 in file CLZ.s
   Uses
      At line 60 in file CLZ.s
Comment: while used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file CLZ.s
   Uses
      None
Comment: main unused
1 symbol
349 symbols in table
